syntax = "proto3";
package paper.paper;

import "paper/paper.proto";
import "gogoproto/gogo.proto";
import "google/api/annotations.proto";
import "cosmos/base/query/v1beta1/pagination.proto";
import "paper/params.proto";
// this line is used by starport scaffolding # 1

option go_package = "paper/x/paper/types";

// Query defines the gRPC querier service.
service Query {
  // Parameters queries the parameters of the module.
  rpc Params(QueryParamsRequest) returns (QueryParamsResponse) {
    option (google.api.http).get = "/paper/paper/params";
  }
  // Queries a list of Papers items.
	rpc Papers(QueryPapersRequest) returns (QueryPapersResponse) {
		option (google.api.http).get = "/paper/paper/papers";
	}

// this line is used by starport scaffolding # 2
}

// QueryParamsRequest is request type for the Query/Params RPC method.
message QueryParamsRequest {}

// QueryParamsResponse is response type for the Query/Params RPC method.
message QueryParamsResponse {
  // params holds all the parameters of this module.
  Params params = 1 [(gogoproto.nullable) = false];
}

message QueryPapersRequest {
  cosmos.base.query.v1beta1.PageRequest pagination = 1;
}

message QueryPapersResponse {
  string host = 1;
  string paperName = 2;
  string owner = 3;
  string price = 4;

  // Returning a list of posts
  repeated Paper Paper = 5;

  // Adding pagination to response
  cosmos.base.query.v1beta1.PageResponse pagination = 6;
}

// this line is used by starport scaffolding # 3
